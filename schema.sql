create table IF NOT EXISTS GENRE (
    ID serial PRIMARY KEY,
    NAME VARCHAR (50) UNIQUE NOT NULL
);

create table IF NOT EXISTS MOVIE (
    ID serial PRIMARY KEY,
    TITLE VARCHAR (50) NOT NULL,
    DESCRIPTION TEXT,
    RELEASE_DATE DATE NOT NULL,
    DURATION_ISO VARCHAR(8) NOT NULL,
    DIRECTOR VARCHAR (50) NOT NULL,
    THUMBNAIL_URL VARCHAR (140),
    TRAILER_YOUTUBE_VIDEO_ID VARCHAR(11)
);

create table  IF NOT EXISTS MOVIE_GENRE (
    MOVIE_ID int REFERENCES MOVIE(id),
    GENRE_ID int REFERENCES GENRE(id),
    CONSTRAINT movie_genre_pkey PRIMARY KEY (MOVIE_ID, genre_id)
);

create table IF NOT EXISTS ACTOR (
    ID serial PRIMARY KEY,
    NAME VARCHAR (40) NOT NULL,
    PICTURE_URL VARCHAR (140)
);

create table IF NOT EXISTS MOVIE_ACTOR (
    MOVIE_ID int REFERENCES MOVIE(id),
    ACTOR_ID int REFERENCES ACTOR(id),
    CHARACTER_NAME VARCHAR(60) NOT NULL,
    CONSTRAINT movie_actor_pkey PRIMARY KEY (MOVIE_ID, ACTOR_id)
);

create table IF NOT EXISTS USER_ACCOUNT (
    ID serial PRIMARY KEY,
    USERNAME VARCHAR (20) NOT NULL UNIQUE,
    PASSWORD VARCHAR (60) NOT NULL,
    REGISTER_DATE TIMESTAMP NOT NULL,
    ENABLED BOOLEAN
);

create table IF NOT EXISTS MOVIE_RATING (
    MOVIE_ID int REFERENCES MOVIE(id),
    USER_ID int REFERENCES USER_ACCOUNT(id),
    RATING SMALLINT NOT NULL,
    CONSTRAINT movie_rating_pkey PRIMARY KEY (MOVIE_ID, USER_ID)
);

create table IF NOT EXISTS PLAYLIST (
    ID serial PRIMARY KEY,
    USER_ID int REFERENCES USER_ACCOUNT(ID),
    LAST_UPDATED TIMESTAMP,
    NAME VARCHAR(50)
);

create table IF NOT EXISTS PLAYLIST_MOVIE (
    PLAYLIST_ID int REFERENCES PLAYLIST(ID),
    MOVIE_ID int REFERENCES MOVIE(ID),
    CONSTRAINT playlist_movie_pkey PRIMARY KEY (PLAYLIST_ID, MOVIE_ID)
);

create table IF NOT EXISTS USER_ROLE (
    ID serial PRIMARY KEY,
    NAME VARCHAR(50) UNIQUE NOT NULL
);

create table IF NOT EXISTS USERS_IN_ROLES (
    USER_ID int REFERENCES USER_ACCOUNT(ID),
    ROLE_ID int REFERENCES USER_ROLE(ID),
    CONSTRAINT users_roles_pkey_constraint PRIMARY KEY (USER_ID, ROLE_ID)
);